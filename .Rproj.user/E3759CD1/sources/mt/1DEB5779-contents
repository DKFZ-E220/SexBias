---
title: "Untitled"
output: html_document
date: "2024-01-30"
---

```{r}
library(Seurat)
library(SeuratDisk)
library(SeuratWrappers)
library(UCell)

library(patchwork)
library(harmony)
library(rliger)
library(reshape2)
library(RColorBrewer)
library(dplyr)
library(stringr) 
library(plyr)

library(GSVA)
library(GSEABase)
library(GSVAdata)
library(ggplot2)

library(ProjecTILs)
library(STACAS)
library(ggplot2)
library(SignatuR)
library(UCell)
```

```{r}
Male_PT <- readRDS("/omics/odcf/analysis/OE0509_projects/hnscc/single_cell/Single_Cell_Analysis/Single_Cell_Datasets/All_Cells_Together/Male_PT.rds")
tumor <- subset(Male_PT, subset = Tumor == "Tumor")
tumor_3 <- subset(tumor, subset = Dataset != c("Kurten"))
obj.list <- SplitObject(tumor_3, split.by = c("HPV"))


bulk.list <- list()
for (i in 1:length(obj.list)){
  bulk.list[[i]] <- Seurat:::PseudobulkExpression(object = obj.list[[i]], pb.method = 'aggregate', slot = 'counts', group.by = "Patient")
  names(bulk.list)[i] <- names(obj.list)[i]
}

GeneSetCollection <- getGmt("/omics/odcf/analysis/OE0509_projects/hnscc/Gender_Analysis/Male/TCGA/EDY/genesignature_Y_chromosome.gmt")
GSVA.list <- list()
for (i in 1:length(bulk.list)){
  GSVA.list[[i]] <- gsva((as.matrix(bulk.list[[i]]$RNA)), GeneSetCollection, method = "gsva", annotation = "org.Hs.eg.db", min.sz=5, max.sz=500, parallel.sz = 4, kcdf="Poisson")
  names(GSVA.list)[i] <- names(bulk.list)[i]
}

data.list <- list()
data.list_asc <- list()
for (i in 1:length(GSVA.list)){
  data.list[[i]] <- data.frame(Ychrom = GSVA.list[[i]][1,], Patient = colnames(GSVA.list[[i]]))
  data.list[[i]] <- data.list[[i]][order(data.list[[i]]$Patient),]
  names(data.list)[i] <- names(GSVA.list)[i]
  
    p33 <- quantile(data.list[[i]]$Ychrom, probs = seq(0.33, 0.66))
    p66 <- quantile(data.list[[i]]$Ychrom, probs = seq(0.66, 0.99))

     Group <- c()
       for (a in 1:length(data.list[[i]]$Ychrom)){
          if (data.list[[i]]$Ychrom[a] <= p33 ) {
          Group[a] = c("Low")
          } else if (data.list[[i]]$Ychrom[a] >= p66) {
          Group[a] = c("High")
          }else {
          Group[a] = c("Intermediate")
       }
     }

    data.list[[i]]$Group <- Group
    data.list_asc[[i]] <- data.list[[i]][order(data.list[[i]]$Ychrom),]
}
data.list <- do.call(rbind.data.frame, data.list)
data <- data.frame(Patient = Male_PT@meta.data$Patient, Group = c(rep(1,length(Male_PT@meta.data$Patient))))
merged_data <- merge(data, data.list, by = "Patient", all.x = TRUE)
order_vector <- match(Male_PT$Patient, merged_data$Patient)
b <- c()
b <- as.data.frame(merged_data$Group.y[order_vector])
colnames(b) <- c("Group_3")
rownames(b) <- rownames(Male_PT@meta.data)
Male_PT$Group_3 <- b$Group_3
```

```{r}
Male_PT <- readRDS("/omics/odcf/analysis/OE0509_projects/hnscc/single_cell/Single_Cell_Analysis/Single_Cell_Datasets/All_Cells_Together/Male_PT_4.rds")
cd8tcell <- subset(Male_PT, subset= (scGate_multi == "CD8T"))
options(timeout = max(900, getOption("timeout")))
download.file("https://figshare.com/ndownloader/files/39012395", destfile = "CD8T_human_ref_v1.rds")
ref.cd8 <- load.reference.map("CD8T_human_ref_v1.rds")
DefaultAssay(cd8tcell) <- "RNA"
cd8tcell <- ProjecTILs.classifier(query = cd8tcell, ref = ref.cd8, filter.cells = F)
c8tcell$CD8Type <- c8tcell$functional.cluster
```

```{r}
cd4tcell <- subset(Male_PT, subset= (scGate_multi == "CD4T"))
options(timeout = max(900, getOption("timeout")))
download.file("https://figshare.com/ndownloader/files/39012395", destfile = "CD4T_human_ref_v1.rds")
ref.cd4 <- load.reference.map("CD4T_human_ref_v1.rds")
programs <- GetSignature(SignatuR$Hs$Programs)
ref.cd4 <- AddModuleScore_UCell(ref.cd4, features = programs, assay = "RNA", name = NULL)
DefaultAssay(cd4tcell) <- "RNA"
cd4tcell <- ProjecTILs.classifier(query = cd4tcell, ref = ref.cd4, filter.cells = F)
cd4tcell$CD4Type <- cd4tcell$functional.cluster
```

```{r}
cd4tcell<- subset(cd4tcell, subset = Dataset != c("Kurten"))

setwd("/omics/odcf/analysis/OE0509_projects/hnscc/single_cell/Single_Cell_Analysis/Single_Cell_Datasets/All_Cells_Together/New_Graphs")
                                                   
color <-c("CD4.CTL_EOMES"= "#8dd3c7","CD4.CTL_Exh"  = "#ffffb3","CD4.CTL_GNLY" = "#bebada","CD4.NaiveLike"= "#fccde5","CD4.Tfh" = "#80b1d3","CD4.Th17"  = "#fdb462","CD4.Treg" = "#b3de69")

metadata <- na.omit(data.frame(Cluster = cd4tcell@meta.data$CD4Type, Group = cd4tcell@meta.data$Group, HPV = cd4tcell@meta.data$HPV, Dataset = cd4tcell@meta.data$Dataset))


  metadata$Category <- str_c(metadata$HPV, "_", metadata$Group)
  split.object <- split(metadata, metadata$Category) 

  plot.list <- list()
  for (i in 1:length(split.object)) {
  library(dplyr)
    plot.list[[i]] <- split.object[[i]] %>%
    group_by(HPV, Group, Cluster) %>%
    dplyr::summarize(n = n()) %>% 
    mutate(pct = round(n/sum(n), digits = 3),
    lbl = scales::percent(pct))
  }
  names(plot.list) <- names(split.object)
  
  grouping <- do.call(rbind.data.frame, plot.list)
  
  theme_set(theme_minimal())  
  theme_update(axis.text.x = element_text(size = 6))
  ggplot(grouping, aes(x=as.factor(Group), y=pct, fill = as.factor(Cluster))) +
  geom_col(position="fill") +
  scale_fill_manual("Cell Type", values = color) +
  ggtitle(c("CD4T Cell Type")) +
  geom_text(aes(label = lbl), 
            size = 1, 
            position = position_fill(vjust = 0.5)) +
  xlab("Y Expression Group") + ylab("Percent") + labs(fill = "CD4T Cell Type") +
  facet_grid(. ~ HPV) 
  graph <- paste0("CD4T_CellType", "_relative_number.pdf")
  ggsave(graph)
```

```{r}
setwd("/omics/odcf/analysis/OE0509_projects/hnscc/single_cell/Single_Cell_Analysis/Single_Cell_Datasets/All_Cells_Together/New_Graphs")
   
                                                   
color <-c("CD4.CTL_EOMES"= "#8dd3c7","CD4.CTL_Exh"  = "#ffffb3","CD4.CTL_GNLY" = "#bebada","CD4.NaiveLike"= "#fccde5","CD4.Tfh" = "#80b1d3","CD4.Th17"  = "#fdb462","CD4.Treg" = "#b3de69")

metadata <- na.omit(data.frame(Cluster = cd4tcell@meta.data$CD4Type, Group = cd4tcell@meta.data$Group, HPV = cd4tcell@meta.data$HPV, Dataset = cd4tcell@meta.data$Dataset))


  metadata$Category <- str_c(metadata$HPV, "_", metadata$Group)
  split.object <- split(metadata, metadata$Category) 

  plot.list <- list()
  for (i in 1:length(split.object)) {
  library(dplyr)
    plot.list[[i]] <- split.object[[i]] %>%
    group_by(HPV, Group, Cluster) %>%
    dplyr::summarize(n = n()) %>% 
    mutate(pct = round(n/sum(n), digits = 3),
    lbl = scales::percent(pct))
  }
  names(plot.list) <- names(split.object)
  
  grouping <- do.call(rbind.data.frame, plot.list)
  
  theme_set(theme_minimal())  
  theme_update(axis.text.x = element_text(size = 6))
  ggplot(grouping, aes(x=as.factor(Group), y=n, fill = as.factor(Cluster))) +
  geom_bar(position="stack", stat = "identity") +
  scale_fill_manual("Cell Type", values = color) +
  ggtitle(c("CD4T Cell Type")) +
  #geom_text(aes(label = n), 
            #size = 3, 
            #position = position_fill(vjust = 0.5)) +
  xlab("Y Expression Group") + ylab("Cell Number") + labs(fill = "CD4T Cell Type") +
  facet_grid(. ~ HPV) 
  graph <- paste0("3D_CD4T_CellType", "_absolute_number.pdf")
  ggsave(graph)
```
```{r}
dccell <- subset(Male_PT, subset= (scGate_multi == "panDC"))
options(timeout = max(900, getOption("timeout")))
download.file("https://figshare.com/ndownloader/files/39119888", destfile = "DC_human_ref_v1.rds")
ref.dc <- load.reference.map("DC_human_ref_v1.rds")

dccell <- ProjecTILs.classifier(query = dccell, ref = ref.dc, filter.cells = F)
dccell$DCType <- dccell$functional.cluster
```
```{r}
dccell<- subset(dccell, subset = Dataset != c("Kurten"))

setwd("/omics/odcf/analysis/OE0509_projects/hnscc/single_cell/Single_Cell_Analysis/Single_Cell_Datasets/All_Cells_Together/New_Graphs")
                                                                                        
color <-c("AS-DC"= "#8dd3c7","cDC1"  = "#ffffb3","cDC2_CD1A" = "#bebada","cDC2_CLEC10A"= "#fccde5","DC3"  = "#80b1d3","MonoDC"  = "#fdb462","pDC"  = "#b3de69")

metadata <- na.omit(data.frame(Cluster = dccell@meta.data$DCType, Group = dccell@meta.data$Group, HPV = dccell@meta.data$HPV, Dataset = dccell@meta.data$Dataset))


  metadata$Category <- str_c( metadata$HPV, "_", metadata$Group)
  split.object <- split(metadata, metadata$Category) 

  plot.list <- list()
  for (i in 1:length(split.object)) {
  library(dplyr)
    plot.list[[i]] <- split.object[[i]] %>%
    group_by(HPV, Group, Cluster) %>%
    dplyr::summarize(n = n()) %>% 
    mutate(pct = round(n/sum(n), digits = 3),
    lbl = scales::percent(pct))
  }
  names(plot.list) <- names(split.object)
  
  grouping <- do.call(rbind.data.frame, plot.list)
  
  theme_set(theme_minimal())  
  theme_update(axis.text.x = element_text(size = 6))
  ggplot(grouping, aes(x=as.factor(Group), y=pct, fill = as.factor(Cluster))) +
  geom_col(position="fill") +
  scale_fill_manual("Cell Type", values = color) +
  ggtitle(c("DC Cell Type")) +
  geom_text(aes(label = lbl), 
            size = 1, 
            position = position_fill(vjust = 0.5)) +
  xlab("Y Expression Group") + ylab("Percent") + labs(fill = "DC Cell Type") +
  facet_grid(. ~ HPV) 
  graph <- paste0("3D_DC_CellType", "_relative_number.pdf")
  ggsave(graph)
```

```{r}

setwd("/omics/odcf/analysis/OE0509_projects/hnscc/single_cell/Single_Cell_Analysis/Single_Cell_Datasets/All_Cells_Together/New_Graphs")
                                                                                        
color <-c("AS-DC"= "#8dd3c7","cDC1"  = "#ffffb3","cDC2_CD1A" = "#bebada","cDC2_CLEC10A"= "#fccde5","DC3"  = "#80b1d3","MonoDC"  = "#fdb462","pDC"  = "#b3de69")

metadata <- na.omit(data.frame(Cluster = dccell@meta.data$DCType, Group = dccell@meta.data$Group, HPV = dccell@meta.data$HPV, Dataset = dccell@meta.data$Dataset))


  metadata$Category <- str_c( metadata$HPV, "_", metadata$Group)
  split.object <- split(metadata, metadata$Category) 

  plot.list <- list()
  for (i in 1:length(split.object)) {
  library(dplyr)
    plot.list[[i]] <- split.object[[i]] %>%
    group_by(HPV, Group, Cluster) %>%
    dplyr::summarize(n = n()) %>% 
    mutate(pct = round(n/sum(n), digits = 3),
    lbl = scales::percent(pct))
  }
  names(plot.list) <- names(split.object)
  
  grouping <- do.call(rbind.data.frame, plot.list)
  
  theme_set(theme_minimal())  
  theme_update(axis.text.x = element_text(size = 6))
  ggplot(grouping, aes(x=as.factor(Group), y=n, fill = as.factor(Cluster))) +
  geom_bar(position="stack", stat = "identity") +
  scale_fill_manual("Cell Type", values = color) +
  ggtitle(c("DC Cell Type")) +
  #geom_text(aes(label = n), 
            #size = 3, 
            #position = position_fill(vjust = 0.5)) +
  xlab("Y Expression Group") + ylab("Cell Number") + labs(fill = "DC Cell Type") +
  facet_grid(. ~ HPV) 
  graph <- paste0("3D_DC_CellType", "_absolute_number.pdf")
  ggsave(graph)
```




